#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>

// function to append user input to the provided text file
void appendToFile(const std::string& filename) {
    // open the file in append mode so that we add content without overwriting
    std::ofstream outFile (filename, std::ios::app);
    // check if the file was opened successfully
    if (!outFile) {
        // print error if file can't be opened 
        std::cerr << "Error opening file for writing!" << std::endl;
        // exit the function if file can't be opened
        return;
    }
    
    // declare a string variable to hold user input
    std::string userInput;
    //prompt user for input
    std::cout << "Enter text to append to the file: ";
    // read input from user 
    std::getline(std::cin, userInput); 
    
    // append the user input to the file
    outFile << userInput << std::endl;
    // close the file after writing to it
    outFile.close();
    // notify the user
    std::cout << "Text has been appended to " << filename << std::endl;
}

// Function to reverse the content of a file and store it in a new file
void reverseFileContent(const std::string& inputFile, const std::string& outputFile) {
    // open the input file for reading
    std::ifstream inFile(inputFile);
    // check if the file was opened successfully
    if (!inFile) {
        // print error if file can't be opened
        std::cerr << "Error opening file for reading!" << std::endl;
        // exit the function if file can't be opened
        return;
    }
    // read the entire file content into a string
    std::string content ((std::istreambuf_iterator<char>(inFile)),
                          std::istreambuf_iterator<char>());
    // close the input file after reading
    inFile.close();
    
    // reverse the content of the string
    std::reverse(content.begin(), content.end());
    
    // write the reversed content to a new file (output)
    std::ofstream outFile(outputFile);
    // check if the output file was opened successfully
    if(!outFile) {
        // print error if file can't be opened
        std::cerr << "Error opening file for writing!" << std::endl;
        // exit the function if file can't be opened
        return;
    }
    // write the reversed content to the file
    outFile << content;
    // close the output file after writing to it
    outFile.close();
    // Notifu the user
    std::cout << "Reversed content has been written to " << outputFile << std::endl; 
}

int main() {
    // define the names of the input and output files
    const std::string inputFile = "CSC450_CT5_mod5.txt";
    const std:: string outputFile = "CSC450-mod5-reverse.txt";
    
    // step 1. append user input to file
    appendToFile(inputFile);
    
    // step 2 reverse the content of the file and write to a new file
    reverseFileContent(inputFile, outputFile);
    
    // return 0 to indicate the program finished successfully
    return 0;
}
